# Generated from PythonLexer.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,123,874,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,
        78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,
        84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,
        91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,
        97,2,98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,
        7,103,2,104,7,104,2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,
        2,109,7,109,2,110,7,110,2,111,7,111,2,112,7,112,2,113,7,113,2,114,
        7,114,2,115,7,115,2,116,7,116,2,117,7,117,2,118,7,118,2,119,7,119,
        2,120,7,120,2,121,7,121,2,122,7,122,2,123,7,123,2,124,7,124,1,0,
        1,0,1,1,1,1,1,2,1,2,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,4,1,4,1,5,1,5,
        1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,
        13,1,13,1,14,1,14,1,15,1,15,1,16,1,16,1,17,1,17,1,18,1,18,1,19,1,
        19,1,20,1,20,1,20,1,21,1,21,1,21,1,22,1,22,1,23,1,23,1,23,1,24,1,
        24,1,25,1,25,1,26,1,26,1,26,1,27,1,27,1,27,1,28,1,28,1,28,1,29,1,
        29,1,29,1,29,1,29,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,
        32,1,32,1,32,1,33,1,33,1,33,1,34,1,34,1,34,1,35,1,35,1,35,1,35,1,
        36,1,36,1,36,1,36,1,37,1,37,1,37,1,38,1,38,1,39,1,39,1,39,1,39,1,
        40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,
        43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,45,1,45,1,45,1,
        46,1,46,1,46,1,46,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,
        48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,1,
        50,1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,52,1,52,1,52,1,52,1,
        53,1,53,1,53,1,53,1,53,1,54,1,54,1,54,1,54,1,55,1,55,1,55,1,55,1,
        55,1,55,1,55,1,55,1,55,1,55,1,56,1,56,1,56,1,56,1,56,1,57,1,57,1,
        57,1,57,1,57,1,57,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,58,1,
        58,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,59,1,60,1,
        60,1,60,1,60,1,60,1,60,1,60,1,60,1,60,1,61,1,61,1,61,1,61,1,62,1,
        62,1,62,1,62,1,62,1,62,1,63,1,63,1,63,1,63,1,64,1,64,1,64,1,64,1,
        64,1,64,1,65,1,65,1,65,1,65,1,66,1,66,1,66,1,66,1,66,1,66,1,67,1,
        67,1,67,1,67,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,68,1,
        68,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,69,1,70,1,70,1,70,1,
        70,1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,71,1,
        72,1,72,1,72,1,72,1,72,1,72,1,72,1,72,1,73,1,73,1,73,1,73,1,73,1,
        73,1,73,1,73,1,74,1,74,1,74,1,74,1,75,1,75,1,75,1,75,1,75,1,75,1,
        75,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,76,1,77,1,77,1,
        77,1,77,1,77,1,78,1,78,1,78,1,78,1,78,1,79,1,79,1,79,1,79,1,79,1,
        79,1,79,1,80,1,80,1,80,1,80,1,80,1,80,1,80,1,81,1,81,1,81,1,81,1,
        81,1,81,1,81,1,81,1,82,1,82,1,82,1,82,1,82,1,82,1,82,1,82,1,83,1,
        83,1,83,1,83,1,83,1,83,1,83,1,83,1,84,1,84,1,84,1,84,1,84,1,85,1,
        85,1,85,1,85,1,85,1,86,1,86,1,86,1,86,1,87,1,87,1,87,1,88,1,88,1,
        88,1,88,1,88,1,88,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,89,1,
        89,1,89,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,90,1,
        91,1,91,1,91,1,91,1,91,1,92,1,92,1,92,1,92,1,93,1,93,1,93,1,93,1,
        93,1,93,1,93,1,94,1,94,1,94,1,94,1,95,1,95,1,95,1,95,1,96,1,96,1,
        96,1,96,1,97,1,97,1,97,1,97,1,97,1,98,1,98,1,98,1,98,1,98,1,98,1,
        98,1,99,1,99,1,99,1,99,1,100,1,100,1,100,1,100,1,100,1,101,1,101,
        1,101,1,101,1,102,1,102,1,102,1,102,1,103,1,103,1,103,1,103,1,103,
        1,103,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,104,1,105,
        1,105,1,105,1,105,1,105,1,106,1,106,1,106,1,106,1,106,1,106,1,106,
        1,106,1,106,1,107,1,107,1,107,1,107,1,107,1,107,1,108,1,108,1,108,
        1,108,1,108,1,108,1,108,1,108,1,109,1,109,1,109,1,109,1,109,1,109,
        1,110,1,110,1,110,1,110,1,110,1,110,1,110,1,111,1,111,1,111,1,111,
        1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,111,1,112,1,112,
        1,112,1,112,1,113,1,113,1,113,1,113,1,113,1,113,1,114,1,114,1,114,
        1,114,1,114,1,115,1,115,1,115,1,115,1,115,1,116,1,116,1,116,1,116,
        1,117,1,117,1,117,1,117,1,117,1,117,1,117,1,118,1,118,3,118,845,
        8,118,1,119,1,119,1,119,5,119,850,8,119,10,119,12,119,853,9,119,
        1,120,1,120,1,121,1,121,1,121,1,121,1,122,4,122,862,8,122,11,122,
        12,122,863,1,123,1,123,1,124,4,124,869,8,124,11,124,12,124,870,1,
        124,1,124,0,0,125,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,
        21,11,23,12,25,13,27,14,29,15,31,16,33,17,35,18,37,19,39,20,41,21,
        43,22,45,23,47,24,49,25,51,26,53,27,55,28,57,29,59,0,61,0,63,30,
        65,31,67,32,69,33,71,34,73,35,75,36,77,37,79,38,81,39,83,40,85,41,
        87,42,89,43,91,44,93,45,95,46,97,47,99,48,101,49,103,50,105,51,107,
        52,109,53,111,54,113,55,115,56,117,57,119,58,121,59,123,60,125,61,
        127,62,129,63,131,64,133,65,135,66,137,67,139,68,141,69,143,70,145,
        71,147,72,149,73,151,74,153,75,155,76,157,77,159,78,161,79,163,80,
        165,81,167,82,169,83,171,84,173,85,175,86,177,87,179,88,181,89,183,
        90,185,91,187,92,189,93,191,94,193,95,195,96,197,97,199,98,201,99,
        203,100,205,101,207,102,209,103,211,104,213,105,215,106,217,107,
        219,108,221,109,223,110,225,111,227,112,229,113,231,114,233,115,
        235,116,237,117,239,118,241,119,243,120,245,121,247,122,249,123,
        1,0,4,2,0,9,9,32,32,2,0,65,90,97,122,1,0,48,57,2,0,12,13,32,32,876,
        0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
        1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
        1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,
        1,0,0,0,0,43,1,0,0,0,0,45,1,0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,
        1,0,0,0,0,53,1,0,0,0,0,55,1,0,0,0,0,57,1,0,0,0,0,63,1,0,0,0,0,65,
        1,0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,
        1,0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,
        1,0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,
        1,0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,
        105,1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,
        0,0,0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,
        1,0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,
        0,133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,
        0,0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,
        151,1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,
        0,0,0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,
        1,0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,177,1,0,0,0,
        0,179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,0,187,1,
        0,0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,193,1,0,0,0,0,195,1,0,0,0,0,
        197,1,0,0,0,0,199,1,0,0,0,0,201,1,0,0,0,0,203,1,0,0,0,0,205,1,0,
        0,0,0,207,1,0,0,0,0,209,1,0,0,0,0,211,1,0,0,0,0,213,1,0,0,0,0,215,
        1,0,0,0,0,217,1,0,0,0,0,219,1,0,0,0,0,221,1,0,0,0,0,223,1,0,0,0,
        0,225,1,0,0,0,0,227,1,0,0,0,0,229,1,0,0,0,0,231,1,0,0,0,0,233,1,
        0,0,0,0,235,1,0,0,0,0,237,1,0,0,0,0,239,1,0,0,0,0,241,1,0,0,0,0,
        243,1,0,0,0,0,245,1,0,0,0,0,247,1,0,0,0,0,249,1,0,0,0,1,251,1,0,
        0,0,3,253,1,0,0,0,5,255,1,0,0,0,7,259,1,0,0,0,9,262,1,0,0,0,11,266,
        1,0,0,0,13,268,1,0,0,0,15,270,1,0,0,0,17,272,1,0,0,0,19,274,1,0,
        0,0,21,276,1,0,0,0,23,278,1,0,0,0,25,280,1,0,0,0,27,282,1,0,0,0,
        29,284,1,0,0,0,31,286,1,0,0,0,33,288,1,0,0,0,35,290,1,0,0,0,37,292,
        1,0,0,0,39,294,1,0,0,0,41,296,1,0,0,0,43,299,1,0,0,0,45,302,1,0,
        0,0,47,304,1,0,0,0,49,307,1,0,0,0,51,309,1,0,0,0,53,311,1,0,0,0,
        55,314,1,0,0,0,57,317,1,0,0,0,59,320,1,0,0,0,61,325,1,0,0,0,63,331,
        1,0,0,0,65,334,1,0,0,0,67,337,1,0,0,0,69,340,1,0,0,0,71,343,1,0,
        0,0,73,347,1,0,0,0,75,351,1,0,0,0,77,354,1,0,0,0,79,356,1,0,0,0,
        81,360,1,0,0,0,83,363,1,0,0,0,85,368,1,0,0,0,87,373,1,0,0,0,89,379,
        1,0,0,0,91,383,1,0,0,0,93,386,1,0,0,0,95,390,1,0,0,0,97,394,1,0,
        0,0,99,400,1,0,0,0,101,408,1,0,0,0,103,413,1,0,0,0,105,419,1,0,0,
        0,107,425,1,0,0,0,109,430,1,0,0,0,111,434,1,0,0,0,113,444,1,0,0,
        0,115,449,1,0,0,0,117,455,1,0,0,0,119,465,1,0,0,0,121,476,1,0,0,
        0,123,485,1,0,0,0,125,489,1,0,0,0,127,495,1,0,0,0,129,499,1,0,0,
        0,131,505,1,0,0,0,133,509,1,0,0,0,135,515,1,0,0,0,137,519,1,0,0,
        0,139,530,1,0,0,0,141,539,1,0,0,0,143,543,1,0,0,0,145,555,1,0,0,
        0,147,563,1,0,0,0,149,571,1,0,0,0,151,575,1,0,0,0,153,582,1,0,0,
        0,155,592,1,0,0,0,157,597,1,0,0,0,159,602,1,0,0,0,161,609,1,0,0,
        0,163,616,1,0,0,0,165,624,1,0,0,0,167,632,1,0,0,0,169,640,1,0,0,
        0,171,645,1,0,0,0,173,650,1,0,0,0,175,654,1,0,0,0,177,657,1,0,0,
        0,179,663,1,0,0,0,181,674,1,0,0,0,183,685,1,0,0,0,185,690,1,0,0,
        0,187,694,1,0,0,0,189,701,1,0,0,0,191,705,1,0,0,0,193,709,1,0,0,
        0,195,713,1,0,0,0,197,718,1,0,0,0,199,725,1,0,0,0,201,729,1,0,0,
        0,203,734,1,0,0,0,205,738,1,0,0,0,207,742,1,0,0,0,209,748,1,0,0,
        0,211,757,1,0,0,0,213,762,1,0,0,0,215,771,1,0,0,0,217,777,1,0,0,
        0,219,785,1,0,0,0,221,791,1,0,0,0,223,798,1,0,0,0,225,811,1,0,0,
        0,227,815,1,0,0,0,229,821,1,0,0,0,231,826,1,0,0,0,233,831,1,0,0,
        0,235,835,1,0,0,0,237,844,1,0,0,0,239,846,1,0,0,0,241,854,1,0,0,
        0,243,856,1,0,0,0,245,861,1,0,0,0,247,865,1,0,0,0,249,868,1,0,0,
        0,251,252,7,0,0,0,252,2,1,0,0,0,253,254,5,10,0,0,254,4,1,0,0,0,255,
        256,5,97,0,0,256,257,5,110,0,0,257,258,5,100,0,0,258,6,1,0,0,0,259,
        260,5,111,0,0,260,261,5,114,0,0,261,8,1,0,0,0,262,263,5,110,0,0,
        263,264,5,111,0,0,264,265,5,116,0,0,265,10,1,0,0,0,266,267,5,38,
        0,0,267,12,1,0,0,0,268,269,5,124,0,0,269,14,1,0,0,0,270,271,5,61,
        0,0,271,16,1,0,0,0,272,273,5,44,0,0,273,18,1,0,0,0,274,275,5,59,
        0,0,275,20,1,0,0,0,276,277,5,40,0,0,277,22,1,0,0,0,278,279,5,41,
        0,0,279,24,1,0,0,0,280,281,5,123,0,0,281,26,1,0,0,0,282,283,5,125,
        0,0,283,28,1,0,0,0,284,285,5,91,0,0,285,30,1,0,0,0,286,287,5,93,
        0,0,287,32,1,0,0,0,288,289,5,43,0,0,289,34,1,0,0,0,290,291,5,45,
        0,0,291,36,1,0,0,0,292,293,5,42,0,0,293,38,1,0,0,0,294,295,5,47,
        0,0,295,40,1,0,0,0,296,297,5,47,0,0,297,298,5,47,0,0,298,42,1,0,
        0,0,299,300,5,42,0,0,300,301,5,42,0,0,301,44,1,0,0,0,302,303,5,37,
        0,0,303,46,1,0,0,0,304,305,5,61,0,0,305,306,5,61,0,0,306,48,1,0,
        0,0,307,308,5,60,0,0,308,50,1,0,0,0,309,310,5,62,0,0,310,52,1,0,
        0,0,311,312,5,60,0,0,312,313,5,61,0,0,313,54,1,0,0,0,314,315,5,62,
        0,0,315,316,5,61,0,0,316,56,1,0,0,0,317,318,5,33,0,0,318,319,5,61,
        0,0,319,58,1,0,0,0,320,321,5,84,0,0,321,322,5,114,0,0,322,323,5,
        117,0,0,323,324,5,101,0,0,324,60,1,0,0,0,325,326,5,70,0,0,326,327,
        5,97,0,0,327,328,5,108,0,0,328,329,5,115,0,0,329,330,5,101,0,0,330,
        62,1,0,0,0,331,332,5,43,0,0,332,333,5,61,0,0,333,64,1,0,0,0,334,
        335,5,45,0,0,335,336,5,61,0,0,336,66,1,0,0,0,337,338,5,42,0,0,338,
        339,5,61,0,0,339,68,1,0,0,0,340,341,5,47,0,0,341,342,5,61,0,0,342,
        70,1,0,0,0,343,344,5,47,0,0,344,345,5,47,0,0,345,346,5,61,0,0,346,
        72,1,0,0,0,347,348,5,42,0,0,348,349,5,42,0,0,349,350,5,61,0,0,350,
        74,1,0,0,0,351,352,5,37,0,0,352,353,5,61,0,0,353,76,1,0,0,0,354,
        355,5,58,0,0,355,78,1,0,0,0,356,357,5,100,0,0,357,358,5,101,0,0,
        358,359,5,102,0,0,359,80,1,0,0,0,360,361,5,105,0,0,361,362,5,102,
        0,0,362,82,1,0,0,0,363,364,5,101,0,0,364,365,5,108,0,0,365,366,5,
        115,0,0,366,367,5,101,0,0,367,84,1,0,0,0,368,369,5,101,0,0,369,370,
        5,108,0,0,370,371,5,105,0,0,371,372,5,102,0,0,372,86,1,0,0,0,373,
        374,5,119,0,0,374,375,5,104,0,0,375,376,5,105,0,0,376,377,5,108,
        0,0,377,378,5,101,0,0,378,88,1,0,0,0,379,380,5,102,0,0,380,381,5,
        111,0,0,381,382,5,114,0,0,382,90,1,0,0,0,383,384,5,105,0,0,384,385,
        5,110,0,0,385,92,1,0,0,0,386,387,5,115,0,0,387,388,5,116,0,0,388,
        389,5,114,0,0,389,94,1,0,0,0,390,391,5,105,0,0,391,392,5,110,0,0,
        392,393,5,116,0,0,393,96,1,0,0,0,394,395,5,102,0,0,395,396,5,108,
        0,0,396,397,5,111,0,0,397,398,5,97,0,0,398,399,5,116,0,0,399,98,
        1,0,0,0,400,401,5,99,0,0,401,402,5,111,0,0,402,403,5,109,0,0,403,
        404,5,112,0,0,404,405,5,108,0,0,405,406,5,101,0,0,406,407,5,120,
        0,0,407,100,1,0,0,0,408,409,5,108,0,0,409,410,5,105,0,0,410,411,
        5,115,0,0,411,412,5,116,0,0,412,102,1,0,0,0,413,414,5,116,0,0,414,
        415,5,117,0,0,415,416,5,112,0,0,416,417,5,108,0,0,417,418,5,101,
        0,0,418,104,1,0,0,0,419,420,5,114,0,0,420,421,5,97,0,0,421,422,5,
        110,0,0,422,423,5,103,0,0,423,424,5,101,0,0,424,106,1,0,0,0,425,
        426,5,100,0,0,426,427,5,105,0,0,427,428,5,99,0,0,428,429,5,116,0,
        0,429,108,1,0,0,0,430,431,5,115,0,0,431,432,5,101,0,0,432,433,5,
        116,0,0,433,110,1,0,0,0,434,435,5,102,0,0,435,436,5,114,0,0,436,
        437,5,111,0,0,437,438,5,122,0,0,438,439,5,101,0,0,439,440,5,110,
        0,0,440,441,5,115,0,0,441,442,5,101,0,0,442,443,5,116,0,0,443,112,
        1,0,0,0,444,445,5,98,0,0,445,446,5,111,0,0,446,447,5,111,0,0,447,
        448,5,108,0,0,448,114,1,0,0,0,449,450,5,98,0,0,450,451,5,121,0,0,
        451,452,5,116,0,0,452,453,5,101,0,0,453,454,5,115,0,0,454,116,1,
        0,0,0,455,456,5,98,0,0,456,457,5,121,0,0,457,458,5,116,0,0,458,459,
        5,101,0,0,459,460,5,97,0,0,460,461,5,114,0,0,461,462,5,114,0,0,462,
        463,5,97,0,0,463,464,5,121,0,0,464,118,1,0,0,0,465,466,5,109,0,0,
        466,467,5,101,0,0,467,468,5,109,0,0,468,469,5,111,0,0,469,470,5,
        114,0,0,470,471,5,121,0,0,471,472,5,118,0,0,472,473,5,105,0,0,473,
        474,5,101,0,0,474,475,5,119,0,0,475,120,1,0,0,0,476,477,5,78,0,0,
        477,478,5,111,0,0,478,479,5,110,0,0,479,480,5,101,0,0,480,481,5,
        84,0,0,481,482,5,121,0,0,482,483,5,112,0,0,483,484,5,101,0,0,484,
        122,1,0,0,0,485,486,5,97,0,0,486,487,5,98,0,0,487,488,5,115,0,0,
        488,124,1,0,0,0,489,490,5,97,0,0,490,491,5,105,0,0,491,492,5,116,
        0,0,492,493,5,101,0,0,493,494,5,114,0,0,494,126,1,0,0,0,495,496,
        5,97,0,0,496,497,5,108,0,0,497,498,5,108,0,0,498,128,1,0,0,0,499,
        500,5,97,0,0,500,501,5,110,0,0,501,502,5,101,0,0,502,503,5,120,0,
        0,503,504,5,116,0,0,504,130,1,0,0,0,505,506,5,97,0,0,506,507,5,110,
        0,0,507,508,5,121,0,0,508,132,1,0,0,0,509,510,5,97,0,0,510,511,5,
        115,0,0,511,512,5,99,0,0,512,513,5,105,0,0,513,514,5,105,0,0,514,
        134,1,0,0,0,515,516,5,98,0,0,516,517,5,105,0,0,517,518,5,110,0,0,
        518,136,1,0,0,0,519,520,5,98,0,0,520,521,5,114,0,0,521,522,5,101,
        0,0,522,523,5,97,0,0,523,524,5,107,0,0,524,525,5,112,0,0,525,526,
        5,111,0,0,526,527,5,105,0,0,527,528,5,110,0,0,528,529,5,116,0,0,
        529,138,1,0,0,0,530,531,5,99,0,0,531,532,5,97,0,0,532,533,5,108,
        0,0,533,534,5,108,0,0,534,535,5,97,0,0,535,536,5,98,0,0,536,537,
        5,108,0,0,537,538,5,101,0,0,538,140,1,0,0,0,539,540,5,99,0,0,540,
        541,5,104,0,0,541,542,5,114,0,0,542,142,1,0,0,0,543,544,5,99,0,0,
        544,545,5,108,0,0,545,546,5,97,0,0,546,547,5,115,0,0,547,548,5,115,
        0,0,548,549,5,109,0,0,549,550,5,101,0,0,550,551,5,116,0,0,551,552,
        5,104,0,0,552,553,5,111,0,0,553,554,5,100,0,0,554,144,1,0,0,0,555,
        556,5,99,0,0,556,557,5,111,0,0,557,558,5,109,0,0,558,559,5,112,0,
        0,559,560,5,105,0,0,560,561,5,108,0,0,561,562,5,101,0,0,562,146,
        1,0,0,0,563,564,5,100,0,0,564,565,5,101,0,0,565,566,5,108,0,0,566,
        567,5,97,0,0,567,568,5,116,0,0,568,569,5,116,0,0,569,570,5,114,0,
        0,570,148,1,0,0,0,571,572,5,100,0,0,572,573,5,105,0,0,573,574,5,
        114,0,0,574,150,1,0,0,0,575,576,5,100,0,0,576,577,5,105,0,0,577,
        578,5,118,0,0,578,579,5,109,0,0,579,580,5,111,0,0,580,581,5,100,
        0,0,581,152,1,0,0,0,582,583,5,101,0,0,583,584,5,110,0,0,584,585,
        5,117,0,0,585,586,5,109,0,0,586,587,5,101,0,0,587,588,5,114,0,0,
        588,589,5,97,0,0,589,590,5,116,0,0,590,591,5,101,0,0,591,154,1,0,
        0,0,592,593,5,101,0,0,593,594,5,118,0,0,594,595,5,97,0,0,595,596,
        5,108,0,0,596,156,1,0,0,0,597,598,5,101,0,0,598,599,5,120,0,0,599,
        600,5,101,0,0,600,601,5,99,0,0,601,158,1,0,0,0,602,603,5,102,0,0,
        603,604,5,105,0,0,604,605,5,108,0,0,605,606,5,116,0,0,606,607,5,
        101,0,0,607,608,5,114,0,0,608,160,1,0,0,0,609,610,5,102,0,0,610,
        611,5,111,0,0,611,612,5,114,0,0,612,613,5,109,0,0,613,614,5,97,0,
        0,614,615,5,116,0,0,615,162,1,0,0,0,616,617,5,103,0,0,617,618,5,
        101,0,0,618,619,5,116,0,0,619,620,5,97,0,0,620,621,5,116,0,0,621,
        622,5,116,0,0,622,623,5,114,0,0,623,164,1,0,0,0,624,625,5,103,0,
        0,625,626,5,108,0,0,626,627,5,111,0,0,627,628,5,98,0,0,628,629,5,
        97,0,0,629,630,5,108,0,0,630,631,5,115,0,0,631,166,1,0,0,0,632,633,
        5,104,0,0,633,634,5,97,0,0,634,635,5,115,0,0,635,636,5,97,0,0,636,
        637,5,116,0,0,637,638,5,116,0,0,638,639,5,114,0,0,639,168,1,0,0,
        0,640,641,5,104,0,0,641,642,5,97,0,0,642,643,5,115,0,0,643,644,5,
        104,0,0,644,170,1,0,0,0,645,646,5,104,0,0,646,647,5,101,0,0,647,
        648,5,108,0,0,648,649,5,112,0,0,649,172,1,0,0,0,650,651,5,104,0,
        0,651,652,5,101,0,0,652,653,5,120,0,0,653,174,1,0,0,0,654,655,5,
        105,0,0,655,656,5,100,0,0,656,176,1,0,0,0,657,658,5,105,0,0,658,
        659,5,110,0,0,659,660,5,112,0,0,660,661,5,117,0,0,661,662,5,116,
        0,0,662,178,1,0,0,0,663,664,5,105,0,0,664,665,5,115,0,0,665,666,
        5,105,0,0,666,667,5,110,0,0,667,668,5,115,0,0,668,669,5,116,0,0,
        669,670,5,97,0,0,670,671,5,110,0,0,671,672,5,99,0,0,672,673,5,101,
        0,0,673,180,1,0,0,0,674,675,5,105,0,0,675,676,5,115,0,0,676,677,
        5,115,0,0,677,678,5,117,0,0,678,679,5,98,0,0,679,680,5,99,0,0,680,
        681,5,108,0,0,681,682,5,97,0,0,682,683,5,115,0,0,683,684,5,115,0,
        0,684,182,1,0,0,0,685,686,5,105,0,0,686,687,5,116,0,0,687,688,5,
        101,0,0,688,689,5,114,0,0,689,184,1,0,0,0,690,691,5,108,0,0,691,
        692,5,101,0,0,692,693,5,110,0,0,693,186,1,0,0,0,694,695,5,108,0,
        0,695,696,5,111,0,0,696,697,5,99,0,0,697,698,5,97,0,0,698,699,5,
        108,0,0,699,700,5,115,0,0,700,188,1,0,0,0,701,702,5,109,0,0,702,
        703,5,97,0,0,703,704,5,112,0,0,704,190,1,0,0,0,705,706,5,109,0,0,
        706,707,5,97,0,0,707,708,5,120,0,0,708,192,1,0,0,0,709,710,5,109,
        0,0,710,711,5,105,0,0,711,712,5,110,0,0,712,194,1,0,0,0,713,714,
        5,110,0,0,714,715,5,101,0,0,715,716,5,120,0,0,716,717,5,116,0,0,
        717,196,1,0,0,0,718,719,5,111,0,0,719,720,5,98,0,0,720,721,5,106,
        0,0,721,722,5,101,0,0,722,723,5,99,0,0,723,724,5,116,0,0,724,198,
        1,0,0,0,725,726,5,111,0,0,726,727,5,99,0,0,727,728,5,116,0,0,728,
        200,1,0,0,0,729,730,5,111,0,0,730,731,5,112,0,0,731,732,5,101,0,
        0,732,733,5,110,0,0,733,202,1,0,0,0,734,735,5,111,0,0,735,736,5,
        114,0,0,736,737,5,100,0,0,737,204,1,0,0,0,738,739,5,112,0,0,739,
        740,5,111,0,0,740,741,5,119,0,0,741,206,1,0,0,0,742,743,5,112,0,
        0,743,744,5,114,0,0,744,745,5,105,0,0,745,746,5,110,0,0,746,747,
        5,116,0,0,747,208,1,0,0,0,748,749,5,112,0,0,749,750,5,114,0,0,750,
        751,5,111,0,0,751,752,5,112,0,0,752,753,5,101,0,0,753,754,5,114,
        0,0,754,755,5,116,0,0,755,756,5,121,0,0,756,210,1,0,0,0,757,758,
        5,114,0,0,758,759,5,101,0,0,759,760,5,112,0,0,760,761,5,114,0,0,
        761,212,1,0,0,0,762,763,5,114,0,0,763,764,5,101,0,0,764,765,5,118,
        0,0,765,766,5,101,0,0,766,767,5,114,0,0,767,768,5,115,0,0,768,769,
        5,101,0,0,769,770,5,100,0,0,770,214,1,0,0,0,771,772,5,114,0,0,772,
        773,5,111,0,0,773,774,5,117,0,0,774,775,5,110,0,0,775,776,5,100,
        0,0,776,216,1,0,0,0,777,778,5,115,0,0,778,779,5,101,0,0,779,780,
        5,116,0,0,780,781,5,97,0,0,781,782,5,116,0,0,782,783,5,116,0,0,783,
        784,5,114,0,0,784,218,1,0,0,0,785,786,5,115,0,0,786,787,5,108,0,
        0,787,788,5,105,0,0,788,789,5,99,0,0,789,790,5,101,0,0,790,220,1,
        0,0,0,791,792,5,115,0,0,792,793,5,111,0,0,793,794,5,114,0,0,794,
        795,5,116,0,0,795,796,5,101,0,0,796,797,5,100,0,0,797,222,1,0,0,
        0,798,799,5,115,0,0,799,800,5,116,0,0,800,801,5,97,0,0,801,802,5,
        116,0,0,802,803,5,105,0,0,803,804,5,99,0,0,804,805,5,109,0,0,805,
        806,5,101,0,0,806,807,5,116,0,0,807,808,5,104,0,0,808,809,5,111,
        0,0,809,810,5,100,0,0,810,224,1,0,0,0,811,812,5,115,0,0,812,813,
        5,117,0,0,813,814,5,109,0,0,814,226,1,0,0,0,815,816,5,115,0,0,816,
        817,5,117,0,0,817,818,5,112,0,0,818,819,5,101,0,0,819,820,5,114,
        0,0,820,228,1,0,0,0,821,822,5,116,0,0,822,823,5,121,0,0,823,824,
        5,112,0,0,824,825,5,101,0,0,825,230,1,0,0,0,826,827,5,118,0,0,827,
        828,5,97,0,0,828,829,5,114,0,0,829,830,5,115,0,0,830,232,1,0,0,0,
        831,832,5,122,0,0,832,833,5,105,0,0,833,834,5,112,0,0,834,234,1,
        0,0,0,835,836,5,105,0,0,836,837,5,109,0,0,837,838,5,112,0,0,838,
        839,5,111,0,0,839,840,5,114,0,0,840,841,5,116,0,0,841,236,1,0,0,
        0,842,845,3,59,29,0,843,845,3,61,30,0,844,842,1,0,0,0,844,843,1,
        0,0,0,845,238,1,0,0,0,846,851,3,241,120,0,847,850,3,241,120,0,848,
        850,3,245,122,0,849,847,1,0,0,0,849,848,1,0,0,0,850,853,1,0,0,0,
        851,849,1,0,0,0,851,852,1,0,0,0,852,240,1,0,0,0,853,851,1,0,0,0,
        854,855,7,1,0,0,855,242,1,0,0,0,856,857,3,245,122,0,857,858,5,46,
        0,0,858,859,3,245,122,0,859,244,1,0,0,0,860,862,3,247,123,0,861,
        860,1,0,0,0,862,863,1,0,0,0,863,861,1,0,0,0,863,864,1,0,0,0,864,
        246,1,0,0,0,865,866,7,2,0,0,866,248,1,0,0,0,867,869,7,3,0,0,868,
        867,1,0,0,0,869,870,1,0,0,0,870,868,1,0,0,0,870,871,1,0,0,0,871,
        872,1,0,0,0,872,873,6,124,0,0,873,250,1,0,0,0,6,0,844,849,851,863,
        870,1,6,0,0
    ]

class PythonLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    INDETACAO = 1
    LINE_BREAK = 2
    AND = 3
    OR = 4
    NOT = 5
    ANDSYMBOL = 6
    ORSYMBOL = 7
    EQ = 8
    COMMA = 9
    SEMI = 10
    LPAREN = 11
    RPAREN = 12
    LCURLY = 13
    RCURLY = 14
    LPARENREC = 15
    RPARENREC = 16
    PLUS = 17
    MINUS = 18
    MULT = 19
    DIVISION = 20
    DIVISIONINT = 21
    EXP = 22
    RESTO = 23
    ATRIBUI = 24
    LESS = 25
    GREATER = 26
    LESSEQUAL = 27
    GREATEREQUAL = 28
    NOTEQUAL = 29
    PLUSEQUAL = 30
    MINUSEQUAL = 31
    MULTEQUAL = 32
    DIVISIONEQUAL = 33
    DIVISIONINTEQUAL = 34
    EXPEQUAL = 35
    RESTOEQUAL = 36
    BLOCK = 37
    FUNCTION = 38
    IF = 39
    ELSE = 40
    ELIF = 41
    WHILE = 42
    FOR = 43
    IN = 44
    TEXTTYPE = 45
    INTTYPE = 46
    FLOATTYPE = 47
    COMPLEXTYPE = 48
    LISTTYPE = 49
    TUPLETYPE = 50
    RANGETYPE = 51
    MAPPINGTYPE = 52
    SETTYPE = 53
    FROZENSET = 54
    BOOLTYPE = 55
    BYTESTYPE = 56
    BYTEARRAYTYPE = 57
    MEMORYVIEWTYPE = 58
    NONETYPE = 59
    ABS = 60
    AITER = 61
    ALL = 62
    ANEXT = 63
    ANY = 64
    ASCII = 65
    BIN = 66
    BREAKPOINT = 67
    CALLABLE = 68
    CHR = 69
    CLASSMETHOD = 70
    COMPILE = 71
    DELATTR = 72
    DIR = 73
    DIVMOD = 74
    ENUMERATE = 75
    EVAL = 76
    EXEC = 77
    FILTER = 78
    FORMAT = 79
    GETATTR = 80
    GLOBALS = 81
    HASATTR = 82
    HASH = 83
    HELP = 84
    HEX = 85
    IDENT = 86
    INPUT = 87
    ISINSTANCE = 88
    ISSUBCLASS = 89
    ITER = 90
    LEN = 91
    LOCALS = 92
    MAP = 93
    MAX = 94
    MIN = 95
    NEXT = 96
    OBJECT = 97
    OCT = 98
    OPEN = 99
    ORD = 100
    POW = 101
    PRINT = 102
    PROPERTY = 103
    REPR = 104
    REVERSED = 105
    ROUND = 106
    SETATTR = 107
    SLICE = 108
    SORTED = 109
    STATICMETHOD = 110
    SUM = 111
    SUPER = 112
    TYPE = 113
    VARS = 114
    ZIP = 115
    IMPORT = 116
    BOOL = 117
    ID = 118
    LETTER = 119
    FLOAT = 120
    DIGITS = 121
    DIGIT = 122
    WS = 123

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'\\n'", "'and'", "'or'", "'not'", "'&'", "'|'", "'='", "','", 
            "';'", "'('", "')'", "'{'", "'}'", "'['", "']'", "'+'", "'-'", 
            "'*'", "'/'", "'//'", "'**'", "'%'", "'=='", "'<'", "'>'", "'<='", 
            "'>='", "'!='", "'+='", "'-='", "'*='", "'/='", "'//='", "'**='", 
            "'%='", "':'", "'def'", "'if'", "'else'", "'elif'", "'while'", 
            "'for'", "'in'", "'str'", "'int'", "'float'", "'complex'", "'list'", 
            "'tuple'", "'range'", "'dict'", "'set'", "'frozenset'", "'bool'", 
            "'bytes'", "'bytearray'", "'memoryview'", "'NoneType'", "'abs'", 
            "'aiter'", "'all'", "'anext'", "'any'", "'ascii'", "'bin'", 
            "'breakpoint'", "'callable'", "'chr'", "'classmethod'", "'compile'", 
            "'delattr'", "'dir'", "'divmod'", "'enumerate'", "'eval'", "'exec'", 
            "'filter'", "'format'", "'getattr'", "'globals'", "'hasattr'", 
            "'hash'", "'help'", "'hex'", "'id'", "'input'", "'isinstance'", 
            "'issubclass'", "'iter'", "'len'", "'locals'", "'map'", "'max'", 
            "'min'", "'next'", "'object'", "'oct'", "'open'", "'ord'", "'pow'", 
            "'print'", "'property'", "'repr'", "'reversed'", "'round'", 
            "'setattr'", "'slice'", "'sorted'", "'staticmethod'", "'sum'", 
            "'super'", "'type'", "'vars'", "'zip'", "'import'" ]

    symbolicNames = [ "<INVALID>",
            "INDETACAO", "LINE_BREAK", "AND", "OR", "NOT", "ANDSYMBOL", 
            "ORSYMBOL", "EQ", "COMMA", "SEMI", "LPAREN", "RPAREN", "LCURLY", 
            "RCURLY", "LPARENREC", "RPARENREC", "PLUS", "MINUS", "MULT", 
            "DIVISION", "DIVISIONINT", "EXP", "RESTO", "ATRIBUI", "LESS", 
            "GREATER", "LESSEQUAL", "GREATEREQUAL", "NOTEQUAL", "PLUSEQUAL", 
            "MINUSEQUAL", "MULTEQUAL", "DIVISIONEQUAL", "DIVISIONINTEQUAL", 
            "EXPEQUAL", "RESTOEQUAL", "BLOCK", "FUNCTION", "IF", "ELSE", 
            "ELIF", "WHILE", "FOR", "IN", "TEXTTYPE", "INTTYPE", "FLOATTYPE", 
            "COMPLEXTYPE", "LISTTYPE", "TUPLETYPE", "RANGETYPE", "MAPPINGTYPE", 
            "SETTYPE", "FROZENSET", "BOOLTYPE", "BYTESTYPE", "BYTEARRAYTYPE", 
            "MEMORYVIEWTYPE", "NONETYPE", "ABS", "AITER", "ALL", "ANEXT", 
            "ANY", "ASCII", "BIN", "BREAKPOINT", "CALLABLE", "CHR", "CLASSMETHOD", 
            "COMPILE", "DELATTR", "DIR", "DIVMOD", "ENUMERATE", "EVAL", 
            "EXEC", "FILTER", "FORMAT", "GETATTR", "GLOBALS", "HASATTR", 
            "HASH", "HELP", "HEX", "IDENT", "INPUT", "ISINSTANCE", "ISSUBCLASS", 
            "ITER", "LEN", "LOCALS", "MAP", "MAX", "MIN", "NEXT", "OBJECT", 
            "OCT", "OPEN", "ORD", "POW", "PRINT", "PROPERTY", "REPR", "REVERSED", 
            "ROUND", "SETATTR", "SLICE", "SORTED", "STATICMETHOD", "SUM", 
            "SUPER", "TYPE", "VARS", "ZIP", "IMPORT", "BOOL", "ID", "LETTER", 
            "FLOAT", "DIGITS", "DIGIT", "WS" ]

    ruleNames = [ "INDETACAO", "LINE_BREAK", "AND", "OR", "NOT", "ANDSYMBOL", 
                  "ORSYMBOL", "EQ", "COMMA", "SEMI", "LPAREN", "RPAREN", 
                  "LCURLY", "RCURLY", "LPARENREC", "RPARENREC", "PLUS", 
                  "MINUS", "MULT", "DIVISION", "DIVISIONINT", "EXP", "RESTO", 
                  "ATRIBUI", "LESS", "GREATER", "LESSEQUAL", "GREATEREQUAL", 
                  "NOTEQUAL", "TRUE", "FALSE", "PLUSEQUAL", "MINUSEQUAL", 
                  "MULTEQUAL", "DIVISIONEQUAL", "DIVISIONINTEQUAL", "EXPEQUAL", 
                  "RESTOEQUAL", "BLOCK", "FUNCTION", "IF", "ELSE", "ELIF", 
                  "WHILE", "FOR", "IN", "TEXTTYPE", "INTTYPE", "FLOATTYPE", 
                  "COMPLEXTYPE", "LISTTYPE", "TUPLETYPE", "RANGETYPE", "MAPPINGTYPE", 
                  "SETTYPE", "FROZENSET", "BOOLTYPE", "BYTESTYPE", "BYTEARRAYTYPE", 
                  "MEMORYVIEWTYPE", "NONETYPE", "ABS", "AITER", "ALL", "ANEXT", 
                  "ANY", "ASCII", "BIN", "BREAKPOINT", "CALLABLE", "CHR", 
                  "CLASSMETHOD", "COMPILE", "DELATTR", "DIR", "DIVMOD", 
                  "ENUMERATE", "EVAL", "EXEC", "FILTER", "FORMAT", "GETATTR", 
                  "GLOBALS", "HASATTR", "HASH", "HELP", "HEX", "IDENT", 
                  "INPUT", "ISINSTANCE", "ISSUBCLASS", "ITER", "LEN", "LOCALS", 
                  "MAP", "MAX", "MIN", "NEXT", "OBJECT", "OCT", "OPEN", 
                  "ORD", "POW", "PRINT", "PROPERTY", "REPR", "REVERSED", 
                  "ROUND", "SETATTR", "SLICE", "SORTED", "STATICMETHOD", 
                  "SUM", "SUPER", "TYPE", "VARS", "ZIP", "IMPORT", "BOOL", 
                  "ID", "LETTER", "FLOAT", "DIGITS", "DIGIT", "WS" ]

    grammarFileName = "PythonLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


