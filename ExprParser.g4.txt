parser grammar ExprParser;
options { tokenVocab=ExprLexer; }

program
    : stat* EOF
    | def EOF
    ;

stat: ID '=' expr ';'
    | expr ';'
    | expr LINE_BREAK ';'
    ;

def : ID '(' ID (',' ID)* ')' '{' stat* '}' ;

expr: ID
    | DIGITS
    | FLOAT
    | func
    | 'not' expr
    | expr INDETACAO 'and' INDETACAO expr
    | expr INDETACAO ANDSYMBOL INDETACAO expr 
    | expr INDETACAO 'or' INDETACAO expr
    | expr INDETACAO ORSYMBOL INDETACAO expr
    | expr ORSYMBOL expr
    | expr INDETACAO EQ INDETACAO expr
    | expr EQ expr
    | expr INDETACAO PLUS INDETACAO expr
    | expr PLUS expr
    | expr INDETACAO MINUS INDETACAO expr
    | expr MINUS expr
    | expr INDETACAO MULT INDETACAO expr
    | expr MULT expr
    | expr INDETACAO DIVISION INDETACAO expr
    | expr DIVISION expr
    | expr INDETACAO DIVISIONINT INDETACAO expr
    | expr DIVISIONINT expr
    | expr EXP
    | expr INDETACAO RESTO INDETACAO expr
    | expr RESTO expr
    | expr INDETACAO ATRIBUI INDETACAO expr
    | expr ATRIBUI expr
    | expr INDETACAO LESS INDETACAO expr
    | expr LESS expr
    | expr INDETACAO GREATER INDETACAO expr
    | expr GREATER expr
    | expr INDETACAO NOTEQUAL INDETACAO expr
    | expr NOTEQUAL expr
    | expr INDETACAO PLUSEQUAL INDETACAO expr
    | expr PLUSEQUAL expr
    | expr INDETACAO MINUSEQUAL INDETACAO expr
    | expr MINUSEQUAL expr
    | expr INDETACAO MULTEQUAL INDETACAO expr
    | expr MULTEQUAL expr
    | expr INDETACAO DIVISIONEQUAL INDETACAO expr
    | expr DIVISIONEQUAL expr
    | expr INDETACAO DIVISIONINTEQUAL INDETACAO expr
    | expr DIVISIONINTEQUAL expr
    | expr INDETACAO EXPEQUAL INDETACAO expr
    | expr EXPEQUAL expr
    | expr INDETACAO RESTOEQUAL INDETACAO expr
    | expr RESTOEQUAL expr
    | LPAREN expr (INDETACAO expr)*  RPAREN 
    | LPARENREC expr (INDETACAO expr)* RPARENREC 
    ;

func : ID '(' expr (',' expr)* ')' ;
